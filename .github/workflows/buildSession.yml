name: build

on: [push]

jobs:
  build:

    runs-on: [macos]

    steps:
    - uses: actions/checkout@v2
    - name: Install Homebrew
      run: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    - name: Install dependencies
      run: |
        brew install bison
        brew cask install xquartz
        brew install flex
        brew install mingw-w64
        brew install pkgconfig
    - name: Preconfiguring LLVM
      run: |
        cd llvm
        mkdir build
        cd build
        cmake ../
    - name: Compiling LLVM
      run: |
        cd llvm/build
        make -j`sysctl -n hw.logicalcpu`
#    - name: Packaging LLVM
#      run: |
#        tar -czvf llvm-macos.tar.gz ./llvm/build
#        mkdir llvm-build
#        mv llvm-macos.tar.gz llvm-build
#    - name: Upload LLVM
#      uses: actions/upload-artifact@v1.0.0
#      with:
#        # Artifact name
#        name: LLVM Compile Results
#        # Directory containing files to upload
#        path: llvm-build
    - name: Preconfiguring Clang
      run: |
        export PATH="$(pwd)/llvm/build/bin:$PATH"
        cd clang
        mkdir build
        cd build
        cmake ../
    - name: Compiling Clang
      run: |
        export PATH="$(pwd)/llvm/build/bin:$PATH"
        cd clang/build/
        make -j`sysctl -n hw.logicalcpu`
    - name: Packaging Clang
      run: |
        tar -czvf clang-macos.tar.gz ./clang/build
        mkdir clang-build
        mv clang-macos.tar.gz clang-build
    - name: Upload Clang
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: clang for macOS
        # Directory containing files to upload
        path: clang-build
#    - name: Compiling GnuTLS/gmp
#      run: |
#        export PATH="$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$PATH"
#        cd gnutls/gmp
#        ./configure
#        make -j`sysctl -n hw.logicalcpu`
#      env:
#        CC: clang
#        CXX: clang++
#    - name: Compiling GnuTLS/nettle
#      run: |
#        export PATH="$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$(pwd)/gnutls/gmp:$PATH"
#        cd gnutls/nettle
#        ./configure
#        make -j8
#      env:
#        CC: clang
#        CXX: clang++
#    - name: Compiling GnuTLS
#      run: |
#        export PATH="$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$(pwd)/gnutls/gmp:$(pwd)/gnutls/nettle:$PATH"
#        cd gnutls/gmp
#        ./configure
#        make -j`sysctl -n hw.logicalcpu`
#      env:
#        CC: clang
#        CXX: clang++
    - name: Compiling FreeType
      run: |
        export PATH="$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$PATH"
        cd freetype
        mkdir build
        cd build
        cmake ../
        make -j`sysctl -n hw.logicalcpu`
      env:
        CC: clang
        CXX: clang++
#    - name: Compiling SMB3
#      run: |
#        export PATH="$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$PATH"
#        cd samba3/source
#        ./configure
#        make -j`sysctl -n hw.logicalcpu`
#      env:
#        CC: clang
#        CXX: clang++
    - name: Preconfiguring Wine
#        export PATH="$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$(pwd)/samba3/source:$(pwd)/freetype/build:$(pwd)/gnutls/gmp:$(pwd)/gnutls/gnutls:$(pwd)/gnutls/nettle:$PATH"
      run: |
        export PATH="/usr/local/opt/bison/bin:/usr/local/opt/flex/bin:$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$(pwd)/freetype/build:$PATH"
        cd wine
        touch programs/winedbg/distversion.h
        ./configure --options CC="clang" --enable-win32on64
        make depend
      env:
        CC: clang
        CXX: clang++
    - name: Compiling Wine
      continue-on-error: true
      run: |
        export PATH="/usr/local/opt/bison/bin:/usr/local/opt/flex/bin:$(pwd)/clang/build/bin:$(pwd)/llvm/build/bin:$(pwd)/freetype/build:$PATH"
        cd wine
        make -j`sysctl -n hw.logicalcpu`
    - name: Packaging Wine
      run: tar -czvf wine-macos.tar.gz ./wine
    - name: Move Artifacts
      run: |
        mkdir wine-build
        mv wine-macos.tar.gz wine-build/
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: Wine for macOS Catalina (WOW64)
        # Directory containing files to upload
        path: wine-build
      
        
